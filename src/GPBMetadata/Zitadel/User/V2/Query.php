<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/user/v2/query.proto

namespace GPBMetadata\Zitadel\User\V2;

class Query
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Google\Api\FieldBehavior::initOnce();
        \GPBMetadata\ProtocGenOpenapiv2\Options\Annotations::initOnce();
        \GPBMetadata\Validate\Validate::initOnce();
        \GPBMetadata\Zitadel\User\V2\User::initOnce();
        \GPBMetadata\Zitadel\Object\V2\Object::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xA2\"\x0A\x1Bzitadel/user/v2/query.proto\x12\x0Fzitadel.user.v2\x1A\x1Fgoogle/api/field_behavior.proto\x1A.protoc-gen-openapiv2/options/annotations.proto\x1A\x17validate/validate.proto\x1A\x1Azitadel/user/v2/user.proto\x1A\x1Ezitadel/object/v2/object.proto\"\x8E\x09\x0A\x0BSearchQuery\x12H\x0A\x0Fuser_name_query\x18\x01 \x01(\x0B2\x1E.zitadel.user.v2.UserNameQueryH\x00R\x0DuserNameQuery\x12K\x0A\x10first_name_query\x18\x02 \x01(\x0B2\x1F.zitadel.user.v2.FirstNameQueryH\x00R\x0EfirstNameQuery\x12H\x0A\x0Flast_name_query\x18\x03 \x01(\x0B2\x1E.zitadel.user.v2.LastNameQueryH\x00R\x0DlastNameQuery\x12H\x0A\x0Fnick_name_query\x18\x04 \x01(\x0B2\x1E.zitadel.user.v2.NickNameQueryH\x00R\x0DnickNameQuery\x12Q\x0A\x12display_name_query\x18\x05 \x01(\x0B2!.zitadel.user.v2.DisplayNameQueryH\x00R\x10displayNameQuery\x12>\x0A\x0Bemail_query\x18\x06 \x01(\x0B2\x1B.zitadel.user.v2.EmailQueryH\x00R\x0AemailQuery\x12>\x0A\x0Bstate_query\x18\x07 \x01(\x0B2\x1B.zitadel.user.v2.StateQueryH\x00R\x0AstateQuery\x12;\x0A\x0Atype_query\x18\x08 \x01(\x0B2\x1A.zitadel.user.v2.TypeQueryH\x00R\x09typeQuery\x12K\x0A\x10login_name_query\x18\x09 \x01(\x0B2\x1F.zitadel.user.v2.LoginNameQueryH\x00R\x0EloginNameQuery\x12K\x0A\x11in_user_ids_query\x18\x0A \x01(\x0B2\x1E.zitadel.user.v2.InUserIDQueryH\x00R\x0EinUserIdsQuery\x125\x0A\x08or_query\x18\x0B \x01(\x0B2\x18.zitadel.user.v2.OrQueryH\x00R\x07orQuery\x128\x0A\x09and_query\x18\x0C \x01(\x0B2\x19.zitadel.user.v2.AndQueryH\x00R\x08andQuery\x128\x0A\x09not_query\x18\x0D \x01(\x0B2\x19.zitadel.user.v2.NotQueryH\x00R\x08notQuery\x12U\x0A\x14in_user_emails_query\x18\x0E \x01(\x0B2\".zitadel.user.v2.InUserEmailsQueryH\x00R\x11inUserEmailsQuery\x12Z\x0A\x15organization_id_query\x18\x0F \x01(\x0B2\$.zitadel.user.v2.OrganizationIdQueryH\x00R\x13organizationIdQuery\x12>\x0A\x0Bphone_query\x18\x10 \x01(\x0B2\x1B.zitadel.user.v2.PhoneQueryH\x00R\x0AphoneQueryB\x0C\x0A\x05query\x12\x03\xF8B\x01\"_\x0A\x07OrQuery\x12T\x0A\x07queries\x18\x01 \x03(\x0B2\x1C.zitadel.user.v2.SearchQueryB\x1C\x92A\x192\x17the sub queries to 'OR'R\x07queries\"a\x0A\x08AndQuery\x12U\x0A\x07queries\x18\x01 \x03(\x0B2\x1C.zitadel.user.v2.SearchQueryB\x1D\x92A\x1A2\x18the sub queries to 'AND'R\x07queries\"b\x0A\x08NotQuery\x12V\x0A\x05query\x18\x01 \x01(\x0B2\x1C.zitadel.user.v2.SearchQueryB\"\x92A\x1F2\x1Dthe sub query to negate (NOT)R\x05query\"{\x0A\x0DInUserIDQuery\x12j\x0A\x08user_ids\x18\x01 \x03(\x09BO\x92AL2\x1Fthe ids of the users to includeJ)[\"69629023906488334\",\"69622366012355662\"]R\x07userIds\"\xCA\x01\x0A\x0DUserNameQuery\x12D\x0A\x09user_name\x18\x01 \x01(\x09B'\x92A\x16J\x0E\"gigi-giraffe\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x08userName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xC5\x01\x0A\x0EFirstNameQuery\x12>\x0A\x0Afirst_name\x18\x01 \x01(\x09B\x1F\x92A\x0EJ\x06\"Gigi\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x09firstName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xC5\x01\x0A\x0DLastNameQuery\x12?\x0A\x09last_name\x18\x01 \x01(\x09B\"\x92A\x11J\x09\"Giraffe\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x08lastName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xC2\x01\x0A\x0DNickNameQuery\x12<\x0A\x09nick_name\x18\x01 \x01(\x09B\x1F\x92A\x0EJ\x06\"Gigi\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x08nickName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xD3\x01\x0A\x10DisplayNameQuery\x12J\x0A\x0Cdisplay_name\x18\x01 \x01(\x09B'\x92A\x16J\x0E\"Gigi Giraffe\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0BdisplayName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xE9\x01\x0A\x0AEmailQuery\x12f\x0A\x0Demail_address\x18\x01 \x01(\x09BA\x92A22\x19email address of the userJ\x12\"gigi@zitadel.com\"x\xC8\x01\xE2A\x01\x02\xFAB\x05r\x03\x18\xC8\x01R\x0CemailAddress\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xD8\x01\x0A\x0APhoneQuery\x12U\x0A\x06number\x18\x01 \x01(\x09B=\x92A/2\x18Phone number of the userJ\x0E\"+41791234567\"x\x14\x80\x01\x01\xE2A\x01\x02\xFAB\x04r\x02\x18\x14R\x06number\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"\xD3\x01\x0A\x0ELoginNameQuery\x12L\x0A\x0Alogin_name\x18\x01 \x01(\x09B-\x92A\x1CJ\x14\"gigi@zitadel.cloud\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x09loginName\x12s\x0A\x06method\x18\x02 \x01(\x0E2\".zitadel.object.v2.TextQueryMethodB7\x92A,2*defines which text equality method is used\xFAB\x05\x82\x01\x02\x10\x01R\x06method\"j\x0A\x0AStateQuery\x12\\\x0A\x05state\x18\x01 \x01(\x0E2\x1A.zitadel.user.v2.UserStateB*\x92A\x1B2\x19current state of the user\xE2A\x01\x02\xFAB\x05\x82\x01\x02\x10\x01R\x05state\"]\x0A\x09TypeQuery\x12P\x0A\x04type\x18\x01 \x01(\x0E2\x15.zitadel.user.v2.TypeB%\x92A\x162\x14the type of the user\xE2A\x01\x02\xFAB\x05\x82\x01\x02\x10\x01R\x04type\"\x86\x01\x0A\x11InUserEmailsQuery\x12q\x0A\x0Buser_emails\x18\x01 \x03(\x09BP\x92AM2\"the emails of the users to includeJ'[\"test@example.com\",\"test@example.org\"]R\x0AuserEmails\"l\x0A\x13OrganizationIdQuery\x12U\x0A\x0Forganization_id\x18\x01 \x01(\x09B,\x92A\x1BJ\x13\"69629023906488334\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0EorganizationId*>\x0A\x04Type\x12\x14\x0A\x10TYPE_UNSPECIFIED\x10\x00\x12\x0E\x0A\x0ATYPE_HUMAN\x10\x01\x12\x10\x0A\x0CTYPE_MACHINE\x10\x02*\xC2\x02\x0A\x0DUserFieldName\x12\x1F\x0A\x1BUSER_FIELD_NAME_UNSPECIFIED\x10\x00\x12\x1D\x0A\x19USER_FIELD_NAME_USER_NAME\x10\x01\x12\x1E\x0A\x1AUSER_FIELD_NAME_FIRST_NAME\x10\x02\x12\x1D\x0A\x19USER_FIELD_NAME_LAST_NAME\x10\x03\x12\x1D\x0A\x19USER_FIELD_NAME_NICK_NAME\x10\x04\x12 \x0A\x1CUSER_FIELD_NAME_DISPLAY_NAME\x10\x05\x12\x19\x0A\x15USER_FIELD_NAME_EMAIL\x10\x06\x12\x19\x0A\x15USER_FIELD_NAME_STATE\x10\x07\x12\x18\x0A\x14USER_FIELD_NAME_TYPE\x10\x08\x12!\x0A\x1DUSER_FIELD_NAME_CREATION_DATE\x10\x09B2Z0github.com/zitadel/zitadel/pkg/grpc/user/v2;userb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

