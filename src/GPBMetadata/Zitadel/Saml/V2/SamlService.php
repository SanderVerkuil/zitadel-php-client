<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/saml/v2/saml_service.proto

namespace GPBMetadata\Zitadel\Saml\V2;

class SamlService
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Zitadel\Object\V2\Object_::initOnce();
        \GPBMetadata\Zitadel\ProtocGenZitadel\V2\Options::initOnce();
        \GPBMetadata\Zitadel\Saml\V2\Authorization::initOnce();
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Google\Api\FieldBehavior::initOnce();
        
        \GPBMetadata\Validate\Validate::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xFE\x17\x0A\"zitadel/saml/v2/saml_service.proto\x12\x0Fzitadel.saml.v2\x1A+zitadel/protoc_gen_zitadel/v2/options.proto\x1A#zitadel/saml/v2/authorization.proto\x1A\x1Cgoogle/api/annotations.proto\x1A\x1Fgoogle/api/field_behavior.proto\x1A.protoc-gen-openapiv2/options/annotations.proto\x1A\x17validate/validate.proto\"j\x0A\x15GetSAMLRequestRequest\x12Q\x0A\x0Fsaml_request_id\x18\x01 \x01(\x09B)\x92A\x1CJ\x14\"163840776835432705\"x\xC8\x01\x80\x01\x01\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0DsamlRequestId\"Y\x0A\x16GetSAMLRequestResponse\x12?\x0A\x0Csaml_request\x18\x01 \x01(\x0B2\x1C.zitadel.saml.v2.SAMLRequestR\x0BsamlRequest\"\xED\x01\x0A\x15CreateResponseRequest\x12K\x0A\x0Fsaml_request_id\x18\x01 \x01(\x09B#\x92A\x16J\x14\"163840776835432705\"\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0DsamlRequestId\x124\x0A\x07session\x18\x02 \x01(\x0B2\x18.zitadel.saml.v2.SessionH\x00R\x07session\x12;\x0A\x05error\x18\x03 \x01(\x0B2#.zitadel.saml.v2.AuthorizationErrorH\x00R\x05errorB\x14\x0A\x0Dresponse_kind\x12\x03\xF8B\x01\"\x8D\x01\x0A\x07Session\x12H\x0A\x0Asession_id\x18\x01 \x01(\x09B)\x92A\x1CJ\x14\"163840776835432705\"x\xC8\x01\x80\x01\x01\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x09sessionId\x128\x0A\x0Dsession_token\x18\x02 \x01(\x09B\x13\x92A\x06x\xC8\x01\x80\x01\x01\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0CsessionToken\"\x87\x02\x0A\x16CreateResponseResponse\x124\x0A\x07details\x18\x01 \x01(\x0B2\x1A.zitadel.object.v2.DetailsR\x07details\x126\x0A\x03url\x18\x02 \x01(\x09B\$\x92A!J\x1F\"https://client.example.org/cb\"R\x03url\x12?\x0A\x08redirect\x18\x03 \x01(\x0B2!.zitadel.saml.v2.RedirectResponseH\x00R\x08redirect\x123\x0A\x04post\x18\x04 \x01(\x0B2\x1D.zitadel.saml.v2.PostResponseH\x00R\x04postB\x09\x0A\x07binding\"\x12\x0A\x10RedirectResponse\"T\x0A\x0CPostResponse\x12\x1F\x0A\x0Brelay_state\x18\x01 \x01(\x09R\x0ArelayState\x12#\x0A\x0Dsaml_response\x18\x02 \x01(\x09R\x0CsamlResponse2\x8E\x07\x0A\x0BSAMLService\x12\xBA\x02\x0A\x0EGetSAMLRequest\x12&.zitadel.saml.v2.GetSAMLRequestRequest\x1A'.zitadel.saml.v2.GetSAMLRequestResponse\"\xD6\x01\x92A\x8D\x01\x12\x18Get SAML Request details\x1AdGet SAML Request details by ID. Returns details that are parsed from the application's SAML Request.J\x0B\x0A\x03200\x12\x04\x0A\x02OK\x8A\xB5\x18\x11\x0A\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02*\x12(/v2/saml/saml_requests/{saml_request_id}\x12\xC1\x04\x0A\x0ECreateResponse\x12&.zitadel.saml.v2.CreateResponseRequest\x1A'.zitadel.saml.v2.CreateResponseResponse\"\xDD\x03\x92A\x91\x03\x12-Finalize a SAML Request and get the response.\x1A\xD2\x02Finalize a SAML Request and get the response definition for success or failure. The response must be handled as per the SAML definition to inform the application about the success or failure. On success, the response contains details for the application to obtain the SAMLResponse. This method can only be called once for an SAML request.J\x0B\x0A\x03200\x12\x04\x0A\x02OK\x8A\xB5\x18\x11\x0A\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02-\"(/v2/saml/saml_requests/{saml_request_id}:\x01*B\x98\x07Z0github.com/zitadel/zitadel/pkg/grpc/saml/v2;saml\x92A\xE2\x06\x12\xC0\x01\x0A\x0CSAML Service\x127Get SAML Auth Request details and create callback URLs.\".\x0A\x07ZITADEL\x12\x13https://zitadel.com\x1A\x0Ehi@zitadel.com*B\x0A\x0AApache 2.0\x124https://github.com/zitadel/zitadel/blob/main/LICENSE2\x032.0\x1A\x0E\$CUSTOM-DOMAIN\"\x01/*\x02\x02\x012\x10application/json2\x10application/grpc2\x1Aapplication/grpc-web+proto:\x10application/json:\x10application/grpc:\x1Aapplication/grpc-web+protoRm\x0A\x03403\x12f\x0AGReturned when the user does not have permission to access the resource.\x12\x1B\x0A\x19\x1A\x17#/definitions/rpcStatusRP\x0A\x03404\x12I\x0A*Returned when the resource does not exist.\x12\x1B\x0A\x19\x1A\x17#/definitions/rpcStatusZ\xC2\x01\x0A\xBF\x01\x0A\x06OAuth2\x12\xB4\x01\x08\x03(\x042!\$CUSTOM-DOMAIN/oauth/v2/authorize:\x1D\$CUSTOM-DOMAIN/oauth/v2/tokenBl\x0A\x10\x0A\x06openid\x12\x06openid\x0AX\x0A*urn:zitadel:iam:org:project:id:zitadel:aud\x12*urn:zitadel:iam:org:project:id:zitadel:audb@\x0A>\x0A\x06OAuth2\x124\x0A\x06openid\x0A*urn:zitadel:iam:org:project:id:zitadel:audr>\x0A\"Detailed information about ZITADEL\x12\x18https://zitadel.com/docsb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

