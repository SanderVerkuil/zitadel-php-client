<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/auth.proto

namespace GPBMetadata\Zitadel;

class Auth
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Zitadel\User::initOnce();
        \GPBMetadata\Zitadel\Org::initOnce();
        \GPBMetadata\Zitadel\Change::initOnce();
        \GPBMetadata\Zitadel\Object_::initOnce();
        \GPBMetadata\Zitadel\Options::initOnce();
        \GPBMetadata\Zitadel\Policy::initOnce();
        \GPBMetadata\Zitadel\Idp::initOnce();
        \GPBMetadata\Zitadel\Metadata::initOnce();
        
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Google\Api\FieldBehavior::initOnce();
        \GPBMetadata\Google\Protobuf\Duration::initOnce();
        \GPBMetadata\Google\Protobuf\Timestamp::initOnce();
        
        $pool->internalAddGeneratedFile(
            "\x0A\xD4\xF0\x01\x0A\x12zitadel/auth.proto\x12\x0Fzitadel.auth.v1\x1A\x11zitadel/org.proto\x1A\x14zitadel/change.proto\x1A\x14zitadel/object.proto\x1A\x15zitadel/options.proto\x1A\x14zitadel/policy.proto\x1A\x11zitadel/idp.proto\x1A\x16zitadel/metadata.proto\x1A\x17validate/validate.proto\x1A\x1Cgoogle/api/annotations.proto\x1A\x1Fgoogle/api/field_behavior.proto\x1A\x1Egoogle/protobuf/duration.proto\x1A\x1Fgoogle/protobuf/timestamp.proto\x1A.protoc-gen-openapiv2/options/annotations.proto\"\x10\x0A\x0EHealthzRequest\"\x11\x0A\x0FHealthzResponse\"\x1E\x0A\x1CGetSupportedLanguagesRequest\"V\x0A\x1DGetSupportedLanguagesResponse\x125\x0A\x09languages\x18\x01 \x03(\x09B\x17\x92A\x14J\x12[\"en\", \"de\", \"it\"]R\x09languages\"\x12\x0A\x10GetMyUserRequest\"\xAA\x01\x0A\x11GetMyUserResponse\x12)\x0A\x04user\x18\x01 \x01(\x0B2\x15.zitadel.user.v1.UserR\x04user\x12j\x0A\x0Alast_login\x18\x02 \x01(\x0B2\x1A.google.protobuf.TimestampB/\x92A,2*The timestamp of the last successful loginR\x09lastLogin\"\x15\x0A\x13RemoveMyUserRequest\"K\x0A\x14RemoveMyUserResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"P\x0A\x18ListMyUserChangesRequest\x124\x0A\x05query\x18\x01 \x01(\x0B2\x1E.zitadel.change.v1.ChangeQueryR\x05query\"]\x0A\x19ListMyUserChangesResponse\x121\x0A\x06result\x18\x02 \x03(\x0B2\x19.zitadel.change.v1.ChangeR\x06resultJ\x04\x08\x01\x10\x02R\x07details\"\x1B\x0A\x19ListMyUserSessionsRequest\"N\x0A\x1AListMyUserSessionsResponse\x120\x0A\x06result\x18\x01 \x03(\x0B2\x18.zitadel.user.v1.SessionR\x06result\"\x82\x01\x0A\x15ListMyMetadataRequest\x12+\x0A\x05query\x18\x01 \x01(\x0B2\x15.zitadel.v1.ListQueryR\x05query\x12<\x0A\x07queries\x18\x02 \x03(\x0B2\".zitadel.metadata.v1.MetadataQueryR\x07queries\"\x82\x01\x0A\x16ListMyMetadataResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x125\x0A\x06result\x18\x02 \x03(\x0B2\x1D.zitadel.metadata.v1.MetadataR\x06result\"4\x0A\x14GetMyMetadataRequest\x12\x1C\x0A\x03key\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x03key\"R\x0A\x15GetMyMetadataResponse\x129\x0A\x08metadata\x18\x01 \x01(\x0B2\x1D.zitadel.metadata.v1.MetadataR\x08metadata\"W\x0A\x14SetMyMetadataRequest\x12\x1C\x0A\x03key\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x03key\x12!\x0A\x05value\x18\x02 \x01(\x0CB\x0B\xFAB\x08z\x06\x10\x01\x18\xA0\xC2\x1ER\x05value\"L\x0A\x15SetMyMetadataResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\xB7\x01\x0A\x18BulkSetMyMetadataRequest\x12N\x0A\x08metadata\x18\x01 \x03(\x0B22.zitadel.auth.v1.BulkSetMyMetadataRequest.MetadataR\x08metadata\x1AK\x0A\x08Metadata\x12\x1C\x0A\x03key\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x03key\x12!\x0A\x05value\x18\x02 \x01(\x0CB\x0B\xFAB\x08z\x06\x10\x01\x18\xA0\xC2\x1ER\x05value\"P\x0A\x19BulkSetMyMetadataResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"7\x0A\x17RemoveMyMetadataRequest\x12\x1C\x0A\x03key\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x03key\"O\x0A\x18RemoveMyMetadataResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"B\x0A\x1BBulkRemoveMyMetadataRequest\x12#\x0A\x04keys\x18\x01 \x03(\x09B\x0F\xFAB\x0C\x92\x01\x09\"\x07r\x05\x10\x01\x18\xC8\x01R\x04keys\"S\x0A\x1CBulkRemoveMyMetadataResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1C\x0A\x1AListMyRefreshTokensRequest\"\x87\x01\x0A\x1BListMyRefreshTokensResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x125\x0A\x06result\x18\x02 \x03(\x0B2\x1D.zitadel.user.v1.RefreshTokenR\x06result\"9\x0A\x1BRevokeMyRefreshTokenRequest\x12\x1A\x0A\x02id\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x02id\"S\x0A\x1CRevokeMyRefreshTokenResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"!\x0A\x1FRevokeAllMyRefreshTokensRequest\"\"\x0A RevokeAllMyRefreshTokensResponse\"B\x0A\x17UpdateMyUserNameRequest\x12'\x0A\x09user_name\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x08userName\"O\x0A\x18UpdateMyUserNameResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"&\x0A\$GetMyPasswordComplexityPolicyRequest\"l\x0A%GetMyPasswordComplexityPolicyResponse\x12C\x0A\x06policy\x18\x01 \x01(\x0B2+.zitadel.policy.v1.PasswordComplexityPolicyR\x06policy\"\xB1\x01\x0A\x17UpdateMyPasswordRequest\x12J\x0A\x0Cold_password\x18\x01 \x01(\x09B'\x92A\x17J\x12\"MyOldPassword12!\"\x80\x01\x01\xE2A\x01\x02\xFAB\x06r\x04\x10\x01(FR\x0BoldPassword\x12J\x0A\x0Cnew_password\x18\x02 \x01(\x09B'\x92A\x17J\x12\"MyNewPassword12!\"\x80\x01\x01\xE2A\x01\x02\xFAB\x06r\x04\x10\x01(FR\x0BnewPassword\"O\x0A\x18UpdateMyPasswordResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x15\x0A\x13GetMyProfileRequest\"\x7F\x0A\x14GetMyProfileResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\x122\x0A\x07profile\x18\x02 \x01(\x0B2\x18.zitadel.user.v1.ProfileR\x07profile\"\x93\x03\x0A\x16UpdateMyProfileRequest\x12@\x0A\x0Afirst_name\x18\x01 \x01(\x09B!\x92A\x10J\x08\"Minnie\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x09firstName\x12=\x0A\x09last_name\x18\x02 \x01(\x09B \x92A\x0FJ\x07\"Mouse\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x08lastName\x128\x0A\x09nick_name\x18\x03 \x01(\x09B\x1B\x92A\x10J\x08\"Minnie\"x\xC8\x01\x80\x01\x01\xFAB\x05r\x03\x18\xC8\x01R\x08nickName\x12J\x0A\x0Cdisplay_name\x18\x04 \x01(\x09B'\x92A\x16J\x0E\"Minnie Mouse\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0BdisplayName\x12A\x0A\x12preferred_language\x18\x05 \x01(\x09B\x12\x92A\x08J\x04\"en\"x\x0A\xFAB\x04r\x02\x18\x0AR\x11preferredLanguage\x12/\x0A\x06gender\x18\x06 \x01(\x0E2\x17.zitadel.user.v1.GenderR\x06gender\"N\x0A\x17UpdateMyProfileResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x13\x0A\x11GetMyEmailRequest\"w\x0A\x12GetMyEmailResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\x12,\x0A\x05email\x18\x02 \x01(\x0B2\x16.zitadel.user.v1.EmailR\x05email\"M\x0A\x11SetMyEmailRequest\x128\x0A\x05email\x18\x01 \x01(\x09B\"\x92A\x14J\x12\"gigi@zitadel.com\"\xE2A\x01\x02\xFAB\x04r\x02`\x01R\x05email\"I\x0A\x12SetMyEmailResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"L\x0A\x14VerifyMyEmailRequest\x124\x0A\x04code\x18\x01 \x01(\x09B \x92A\x0FJ\x07\"H83J3\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x04code\"L\x0A\x15VerifyMyEmailResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\"\x0A ResendMyEmailVerificationRequest\"X\x0A!ResendMyEmailVerificationResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x13\x0A\x11GetMyPhoneRequest\"w\x0A\x12GetMyPhoneResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\x12,\x0A\x05phone\x18\x02 \x01(\x0B2\x16.zitadel.user.v1.PhoneR\x05phone\"W\x0A\x11SetMyPhoneRequest\x12B\x0A\x05phone\x18\x01 \x01(\x09B,\x92A\x19J\x12\"+41 71 000 00 00\"x2\x80\x01\x01\xE2A\x01\x02\xFAB\x09r\x07\x10\x01\x182:\x01+R\x05phone\"I\x0A\x12SetMyPhoneResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"L\x0A\x14VerifyMyPhoneRequest\x124\x0A\x04code\x18\x01 \x01(\x09B \x92A\x0FJ\x07\"H83J3\"x\xC8\x01\x80\x01\x01\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x04code\"L\x0A\x15VerifyMyPhoneResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\"\x0A ResendMyPhoneVerificationRequest\"X\x0A!ResendMyPhoneVerificationResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x16\x0A\x14RemoveMyPhoneRequest\"L\x0A\x15RemoveMyPhoneResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x17\x0A\x15RemoveMyAvatarRequest\"M\x0A\x16RemoveMyAvatarResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"F\x0A\x17ListMyLinkedIDPsRequest\x12+\x0A\x05query\x18\x01 \x01(\x0B2\x15.zitadel.v1.ListQueryR\x05query\"\x82\x01\x0A\x18ListMyLinkedIDPsResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x123\x0A\x06result\x18\x02 \x03(\x0B2\x1B.zitadel.idp.v1.IDPUserLinkR\x06result\"o\x0A\x18RemoveMyLinkedIDPRequest\x12!\x0A\x06idp_id\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x05idpId\x120\x0A\x0Elinked_user_id\x18\x02 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x0ClinkedUserId\"P\x0A\x19RemoveMyLinkedIDPResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1A\x0A\x18ListMyAuthFactorsRequest\"P\x0A\x19ListMyAuthFactorsResponse\x123\x0A\x06result\x18\x01 \x03(\x0B2\x1B.zitadel.user.v1.AuthFactorR\x06result\"\x1B\x0A\x19AddMyAuthFactorU2FRequest\"\x81\x01\x0A\x1AAddMyAuthFactorU2FResponse\x12.\x0A\x03key\x18\x01 \x01(\x0B2\x1C.zitadel.user.v1.WebAuthNKeyR\x03key\x123\x0A\x07details\x18\x02 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1B\x0A\x19AddMyAuthFactorOTPRequest\"\xB8\x02\x0A\x1AAddMyAuthFactorOTPResponse\x12\xA3\x01\x0A\x03url\x18\x01 \x01(\x09B\x90\x01\x92A\x8C\x01J\x89\x01\"otpauth://totp/ZITADEL:gigi@acme.zitadel.cloud?algorithm=SHA1&digits=6&issuer=ZITADEL&period=30&secret=TJOPWSDYILLHXFV4MLKNNJOWFG7VSDCK\"R\x03url\x12?\x0A\x06secret\x18\x02 \x01(\x09B'\x92A\$J\"\"TJOPWSDYILLHXFV4MLKNNJOWFG7VSDCK\"R\x06secret\x123\x0A\x07details\x18\x03 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"O\x0A\x1CVerifyMyAuthFactorOTPRequest\x12/\x0A\x04code\x18\x01 \x01(\x09B\x1B\x92A\x0AJ\x08\"123456\"\xE2A\x01\x02\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x04code\"T\x0A\x1DVerifyMyAuthFactorOTPResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"s\x0A\x1CVerifyMyAuthFactorU2FRequest\x12S\x0A\x0Cverification\x18\x01 \x01(\x0B2%.zitadel.user.v1.WebAuthNVerificationB\x08\xFAB\x05\x8A\x01\x02\x10\x01R\x0Cverification\"T\x0A\x1DVerifyMyAuthFactorU2FResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1E\x0A\x1CRemoveMyAuthFactorOTPRequest\"T\x0A\x1DRemoveMyAuthFactorOTPResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1E\x0A\x1CAddMyAuthFactorOTPSMSRequest\"T\x0A\x1DAddMyAuthFactorOTPSMSResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"!\x0A\x1FRemoveMyAuthFactorOTPSMSRequest\"W\x0A RemoveMyAuthFactorOTPSMSResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\" \x0A\x1EAddMyAuthFactorOTPEmailRequest\"V\x0A\x1FAddMyAuthFactorOTPEmailResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"#\x0A!RemoveMyAuthFactorOTPEmailRequest\"Y\x0A\"RemoveMyAuthFactorOTPEmailResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"E\x0A\x1CRemoveMyAuthFactorU2FRequest\x12%\x0A\x08token_id\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x07tokenId\"T\x0A\x1DRemoveMyAuthFactorU2FResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1B\x0A\x19ListMyPasswordlessRequest\"T\x0A\x1AListMyPasswordlessResponse\x126\x0A\x06result\x18\x01 \x03(\x0B2\x1E.zitadel.user.v1.WebAuthNTokenR\x06result\"\x1A\x0A\x18AddMyPasswordlessRequest\"\x80\x01\x0A\x19AddMyPasswordlessResponse\x12.\x0A\x03key\x18\x01 \x01(\x0B2\x1C.zitadel.user.v1.WebAuthNKeyR\x03key\x123\x0A\x07details\x18\x02 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"\x1E\x0A\x1CAddMyPasswordlessLinkRequest\"\xCE\x02\x0A\x1DAddMyPasswordlessLinkResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\x12\xAE\x01\x0A\x04link\x18\x02 \x01(\x09B\x99\x01\x92A\x95\x01J\x92\x01\"https://acme.com/ui/login/login/passwordless/init?userID=182156264229306625&orgID=165947650742997249&codeID=200949504189388947&code=kFfsO8OizZPS\"R\x04link\x12G\x0A\x0Aexpiration\x18\x03 \x01(\x0B2\x19.google.protobuf.DurationB\x0C\x92A\x09J\x07\"3600s\"R\x0Aexpiration\"\x1F\x0A\x1DSendMyPasswordlessLinkRequest\"U\x0A\x1ESendMyPasswordlessLinkResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"r\x0A\x1BVerifyMyPasswordlessRequest\x12S\x0A\x0Cverification\x18\x01 \x01(\x0B2%.zitadel.user.v1.WebAuthNVerificationB\x08\xFAB\x05\x8A\x01\x02\x10\x01R\x0Cverification\"S\x0A\x1CVerifyMyPasswordlessResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"D\x0A\x1BRemoveMyPasswordlessRequest\x12%\x0A\x08token_id\x18\x01 \x01(\x09B\x0A\xFAB\x07r\x05\x10\x01\x18\xC8\x01R\x07tokenId\"S\x0A\x1CRemoveMyPasswordlessResponse\x123\x0A\x07details\x18\x01 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\"F\x0A\x17ListMyUserGrantsRequest\x12+\x0A\x05query\x18\x01 \x01(\x0B2\x15.zitadel.v1.ListQueryR\x05query\"\x81\x01\x0A\x18ListMyUserGrantsResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x122\x0A\x06result\x18\x02 \x03(\x0B2\x1A.zitadel.auth.v1.UserGrantR\x06result\"\x83\x06\x0A\x09UserGrant\x12/\x0A\x06org_id\x18\x01 \x01(\x09B\x18\x92A\x15J\x13\"69629026806489455\"R\x05orgId\x127\x0A\x0Aproject_id\x18\x02 \x01(\x09B\x18\x92A\x15J\x13\"98729028932384528\"R\x09projectId\x121\x0A\x07user_id\x18\x03 \x01(\x09B\x18\x92A\x15J\x13\"28746028909593987\"R\x06userId\x123\x0A\x05roles\x18\x04 \x03(\x09B\x1D\x92A\x1AJ\x18[\"RoleKey1\", \"RoleKey2\"]R\x05roles\x12)\x0A\x08org_name\x18\x05 \x01(\x09B\x0E\x92A\x0BJ\x09\"ZITADEL\"R\x07orgName\x12\"\x0A\x08grant_id\x18\x06 \x01(\x09B\x07\x92A\x04J\x02\"\"R\x07grantId\x123\x0A\x07details\x18\x07 \x01(\x0B2\x19.zitadel.v1.ObjectDetailsR\x07details\x123\x0A\x0Aorg_domain\x18\x08 \x01(\x09B\x14\x92A\x11J\x0F\"zitadel.cloud\"R\x09orgDomain\x121\x0A\x0Cproject_name\x18\x09 \x01(\x09B\x0E\x92A\x0BJ\x09\"ZITADEL\"R\x0BprojectName\x12B\x0A\x10project_grant_id\x18\x0A \x01(\x09B\x18\x92A\x15J\x13\"28746028909586246\"R\x0EprojectGrantId\x12:\x0A\x09role_keys\x18\x0B \x03(\x09B\x1D\x92A\x1AJ\x18[\"RoleKey1\", \"RoleKey2\"]R\x08roleKeys\x12[\x0A\x09user_type\x18\x0C \x01(\x0E2\x15.zitadel.user.v1.TypeB'\x92A\$2\"type of the user (human / machine)R\x08userType\x12[\x0A\x05state\x18\x0D \x01(\x0E2\x1F.zitadel.user.v1.UserGrantStateB\$\x92A!2\x1Fcurrent state of the user grantR\x05state\"\xC0\x01\x0A\x18ListMyProjectOrgsRequest\x12+\x0A\x05query\x18\x01 \x01(\x0B2\x15.zitadel.v1.ListQueryR\x05query\x122\x0A\x07queries\x18\x02 \x03(\x0B2\x18.zitadel.org.v1.OrgQueryR\x07queries\x12C\x0A\x0Esorting_column\x18\x03 \x01(\x0E2\x1C.zitadel.org.v1.OrgFieldNameR\x0DsortingColumn\"{\x0A\x19ListMyProjectOrgsResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x12+\x0A\x06result\x18\x02 \x03(\x0B2\x13.zitadel.org.v1.OrgR\x06result\"!\x0A\x1FListMyZitadelPermissionsRequest\"Z\x0A ListMyZitadelPermissionsResponse\x126\x0A\x06result\x18\x01 \x03(\x09B\x1E\x92A\x1BJ\x19[\"org.read\", \"org.write\"]R\x06result\"!\x0A\x1FListMyProjectPermissionsRequest\"Y\x0A ListMyProjectPermissionsResponse\x125\x0A\x06result\x18\x01 \x03(\x09B\x1D\x92A\x1AJ\x18[\"RoleKey1\", \"RoleKey2\"]R\x06result\"\x83\x01\x0A\x18ListMyMembershipsRequest\x12+\x0A\x05query\x18\x01 \x01(\x0B2\x15.zitadel.v1.ListQueryR\x05query\x12:\x0A\x07queries\x18\x02 \x03(\x0B2 .zitadel.user.v1.MembershipQueryR\x07queries\"\x83\x01\x0A\x19ListMyMembershipsResponse\x121\x0A\x07details\x18\x01 \x01(\x0B2\x17.zitadel.v1.ListDetailsR\x07details\x123\x0A\x06result\x18\x02 \x03(\x0B2\x1B.zitadel.user.v1.MembershipR\x06result\"\x19\x0A\x17GetMyLabelPolicyRequest\"R\x0A\x18GetMyLabelPolicyResponse\x126\x0A\x06policy\x18\x01 \x01(\x0B2\x1E.zitadel.policy.v1.LabelPolicyR\x06policy\"\x1B\x0A\x19GetMyPrivacyPolicyRequest\"V\x0A\x1AGetMyPrivacyPolicyResponse\x128\x0A\x06policy\x18\x01 \x01(\x0B2 .zitadel.policy.v1.PrivacyPolicyR\x06policy\"\x19\x0A\x17GetMyLoginPolicyRequest\"R\x0A\x18GetMyLoginPolicyResponse\x126\x0A\x06policy\x18\x01 \x01(\x0B2\x1E.zitadel.policy.v1.LoginPolicyR\x06policy2\xA4\x95\x01\x0A\x0BAuthService\x12\xD3\x01\x0A\x07Healthz\x12\x1F.zitadel.auth.v1.HealthzRequest\x1A .zitadel.auth.v1.HealthzResponse\"\x84\x01\x92Aq\x0A\x07General\x12\x07Healthz\x1A]The health endpoint allows an external system to probe if ZITADEL authentication API is alive\x82\xD3\xE4\x93\x02\x0A\x12\x08/healthz\x12\xFA\x01\x0A\x15GetSupportedLanguages\x12-.zitadel.auth.v1.GetSupportedLanguagesRequest\x1A..zitadel.auth.v1.GetSupportedLanguagesResponse\"\x81\x01\x92AY\x0A\x07General\x12\x13Supported Languages\x1A7Use GetSupportedLanguages on the admin service instead.X\x01\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x0C\x12\x0A/languages\x12\xF1\x01\x0A\x09GetMyUser\x12!.zitadel.auth.v1.GetMyUserRequest\x1A\".zitadel.auth.v1.GetMyUserResponse\"\x9C\x01\x92Au\x0A\x04User\x12\x0BGet my user\x1A`Returns the full user object of the authenticated user including the profile, email, phone, etc \x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x0B\x12\x09/users/me\x12\xA8\x02\x0A\x0CRemoveMyUser\x12\$.zitadel.auth.v1.RemoveMyUserRequest\x1A%.zitadel.auth.v1.RemoveMyUserResponse\"\xCA\x01\x92A\x9F\x01\x0A\x04User\x12\x0EDelete my user\x1A\x86\x01Deletes the currently authenticated user. All authentication tokens will be removed and the user will not be able to make any request.\x82\xB5\x18\x12\x0A\x10user.self.delete\x82\xD3\xE4\x93\x02\x0B*\x09/users/me\x12\xCD\x02\x0A\x11ListMyUserChanges\x12).zitadel.auth.v1.ListMyUserChangesRequest\x1A*.zitadel.auth.v1.ListMyUserChangesResponse\"\xE0\x01\x92A\xA5\x01\x0A\x04User\x12\x13Get My User History\x1A\x87\x01Returns a list of changes/events that have happened on the authenticated user. It's the history of the user. Make sure to send a limit.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1E\"\x19/users/me/changes/_search:\x01*\x12\xD9\x02\x0A\x12ListMyUserSessions\x12*.zitadel.auth.v1.ListMyUserSessionsRequest\x1A+.zitadel.auth.v1.ListMyUserSessionsResponse\"\xE9\x01\x92A\xAD\x01\x0A\x04User\x12\x14Get My User Sessions\x1A\x8E\x01Returns a list of a user session for the user agent of the authenticated user. This can be used to switch accounts in the current application.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1F\"\x1A/users/me/sessions/_search:\x01*\x12\xCA\x02\x0A\x0EListMyMetadata\x12&.zitadel.auth.v1.ListMyMetadataRequest\x1A'.zitadel.auth.v1.ListMyMetadataResponse\"\xE6\x01\x92A\xAA\x01\x0A\x0DUser Metadata\x12\x14Get My User Metadata\x1A\x82\x01Returns a list of metadata of the authenticated user. Metadata is a key value list with additional information needed on the user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1F\"\x1A/users/me/metadata/_search:\x01*\x12\xD9\x02\x0A\x0DGetMyMetadata\x12%.zitadel.auth.v1.GetMyMetadataRequest\x1A&.zitadel.auth.v1.GetMyMetadataResponse\"\xF8\x01\x92A\xC1\x01\x0A\x0DUser Metadata\x12\x1BGet My User Metadata By Key\x1A\x92\x01Returns a metadata value by a specific key of the authenticated user. Metadata is a key value list with additional information needed on the user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1A\x12\x18/users/me/metadata/{key}\x12\x94\x02\x0A\x13ListMyRefreshTokens\x12+.zitadel.auth.v1.ListMyRefreshTokensRequest\x1A,.zitadel.auth.v1.ListMyRefreshTokensResponse\"\xA1\x01\x92A`\x0A\x0BUser Tokens\x12\x12Get Refresh Tokens\x1A=Returns the list of refresh tokens of the authenticated user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02%\" /users/me/tokens/refresh/_search:\x01*\x12\x9F\x02\x0A\x14RevokeMyRefreshToken\x12,.zitadel.auth.v1.RevokeMyRefreshTokenRequest\x1A-.zitadel.auth.v1.RevokeMyRefreshTokenResponse\"\xA9\x01\x92An\x0A\x0BUser Tokens\x12\x15Revoke Refresh Tokens\x1AHRevokes a single refresh token of the authorized user by its (token) id.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1F*\x1D/users/me/tokens/refresh/{id}\x12\xA6\x02\x0A\x18RevokeAllMyRefreshTokens\x120.zitadel.auth.v1.RevokeAllMyRefreshTokensRequest\x1A1.zitadel.auth.v1.RevokeAllMyRefreshTokensResponse\"\xA4\x01\x92A_\x0A\x0BUser Tokens\x12\x19Revoke All Refresh Tokens\x1A5Revokes all refresh tokens of the authenticated user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02)\"\$/users/me/tokens/refresh/_revoke_all:\x01*\x12\xAC\x02\x0A\x10UpdateMyUserName\x12(.zitadel.auth.v1.UpdateMyUserNameRequest\x1A).zitadel.auth.v1.UpdateMyUserNameResponse\"\xC2\x01\x92A\x8E\x01\x0A\x05Users\x12\x12Change My Username\x1AqChanges the username of the authenticated user. The user has to log in with the newly created username afterward.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x17\x1A\x12/users/me/username:\x01*\x12\xCA\x03\x0A\x1DGetMyPasswordComplexityPolicy\x125.zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest\x1A6.zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse\"\xB9\x02\x92A\xFC\x01\x0A\x0DUser Password\x0A\x08Policies\x12\x1DGet Passwordcomplexity Policy\x1A\xC1\x01Returns the password complexity settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines how the password should look.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02 \x12\x1E/policies/passwords/complexity\x12\xAE\x02\x0A\x10UpdateMyPassword\x12(.zitadel.auth.v1.UpdateMyPasswordRequest\x1A).zitadel.auth.v1.UpdateMyPasswordResponse\"\xC4\x01\x92A\x90\x01\x0A\x0DUser Password\x12\x0FChange Password\x1AnChanges the password of the authenticated user. Make sure the password follows the password complexity policy.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x17\x1A\x12/users/me/password:\x01*\x12\x94\x02\x0A\x0CGetMyProfile\x12\$.zitadel.auth.v1.GetMyProfileRequest\x1A%.zitadel.auth.v1.GetMyProfileResponse\"\xB6\x01\x92A\x86\x01\x0A\x0CUser Profile\x12\x0EGet My Profile\x1AfReturns the profile information of the authenticated user, this includes given name, family name, etc.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x13\x12\x11/users/me/profile\x12\xBE\x02\x0A\x0FUpdateMyProfile\x12'.zitadel.auth.v1.UpdateMyProfileRequest\x1A(.zitadel.auth.v1.UpdateMyProfileResponse\"\xD7\x01\x92A\xA4\x01\x0A\x0CUser Profile\x12\x11Update My Profile\x1A\x80\x01Change the profile information of the authenticated user. This includes information like given name, family name, language, etc.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x16\x1A\x11/users/me/profile:\x01*\x12\xEB\x01\x0A\x0AGetMyEmail\x12\".zitadel.auth.v1.GetMyEmailRequest\x1A#.zitadel.auth.v1.GetMyEmailResponse\"\x93\x01\x92Af\x0A\x0AUser Email\x12\x0CGet My Email\x1AJReturns the email address and the verified flag of the authenticated user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x11\x12\x0F/users/me/email\x12\x99\x02\x0A\x0ASetMyEmail\x12\".zitadel.auth.v1.SetMyEmailRequest\x1A#.zitadel.auth.v1.SetMyEmailResponse\"\xC1\x01\x92A\x90\x01\x0A\x0AUser Email\x12\x0FUpdate My Email\x1AqChange the email address of the authenticated user. A verification email will be sent to the given email address.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x14\x1A\x0F/users/me/email:\x01*\x12\xBC\x02\x0A\x0DVerifyMyEmail\x12%.zitadel.auth.v1.VerifyMyEmailRequest\x1A&.zitadel.auth.v1.VerifyMyEmailResponse\"\xDB\x01\x92A\xA2\x01\x0A\x0AUser Email\x12\x0FVerify My Email\x1A\x82\x01Verify the email address of the authenticated user with the code that has been sent. State of the email address is verified after.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1C\"\x17/users/me/email/_verify:\x01*\x12\xEE\x02\x0A\x19ResendMyEmailVerification\x121.zitadel.auth.v1.ResendMyEmailVerificationRequest\x1A2.zitadel.auth.v1.ResendMyEmailVerificationResponse\"\xE9\x01\x92A\xA3\x01\x0A\x0AUser Email\x12\x19Resend Email Verification\x1AzA new email will be sent to the last set email address of the authenticated user, the last set email address will be used.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02)\"\$/users/me/email/_resend_verification:\x01*\x12\xF8\x01\x0A\x0AGetMyPhone\x12\".zitadel.auth.v1.GetMyPhoneRequest\x1A#.zitadel.auth.v1.GetMyPhoneResponse\"\xA0\x01\x92As\x0A\x0AUser Phone\x12\x0CGet My Phone\x1AWReturns the phone number of the authenticated user and if the state is verified or not.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x11\x12\x0F/users/me/phone\x12\xC6\x02\x0A\x0ASetMyPhone\x12\".zitadel.auth.v1.SetMyPhoneRequest\x1A#.zitadel.auth.v1.SetMyPhoneResponse\"\xEE\x01\x92A\xBD\x01\x0A\x0AUser Phone\x12\x0CSet My Phone\x1A\xA0\x01Sets a new phone number to the authenticated user. If a notification provider is configured the user will receive an sms with a code to authenticate the number.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x14\x1A\x0F/users/me/phone:\x01*\x12\xC6\x02\x0A\x0DVerifyMyPhone\x12%.zitadel.auth.v1.VerifyMyPhoneRequest\x1A&.zitadel.auth.v1.VerifyMyPhoneResponse\"\xE5\x01\x92A\xAC\x01\x0A\x0AUser Phone\x12\x0CVerify Phone\x1A\x8F\x01Verify the phone number of the authenticated user, with the code that has been sent to the number. State of the phone number is verified after.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1C\"\x17/users/me/phone/_verify:\x01*\x12\x84\x03\x0A\x19ResendMyPhoneVerification\x121.zitadel.auth.v1.ResendMyPhoneVerificationRequest\x1A2.zitadel.auth.v1.ResendMyPhoneVerificationResponse\"\xFF\x01\x92A\xB9\x01\x0A\x0AUser Phone\x12\x19Resend Phone verification\x1A\x8F\x01Resends the verification notification to the last given phone number of the authenticated user. The notification provider has to be configured.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02)\"\$/users/me/phone/_resend_verification:\x01*\x12\xEC\x01\x0A\x0DRemoveMyPhone\x12%.zitadel.auth.v1.RemoveMyPhoneRequest\x1A&.zitadel.auth.v1.RemoveMyPhoneResponse\"\x8B\x01\x92A^\x0A\x0AUser Phone\x12\x13Remove Phone Number\x1A;The phone number of the authenticated user will be removed.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x11*\x0F/users/me/phone\x12\xA3\x02\x0A\x0ERemoveMyAvatar\x12&.zitadel.auth.v1.RemoveMyAvatarRequest\x1A'.zitadel.auth.v1.RemoveMyAvatarResponse\"\xBF\x01\x92A\x90\x01\x0A\x04User\x12\x10Remove My Avatar\x1AvRemove the avatar of the authenticated user. If no avatar is set a shortcut of the name of the user will be presented.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x12*\x10/users/me/avatar\x12\xBB\x02\x0A\x10ListMyLinkedIDPs\x12(.zitadel.auth.v1.ListMyLinkedIDPsRequest\x1A).zitadel.auth.v1.ListMyLinkedIDPsResponse\"\xD1\x01\x92A\x99\x01\x0A\x11User Social Login\x12\x12List Social Logins\x1ApReturns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.)\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1B\"\x16/users/me/idps/_search:\x01*\x12\xE4\x03\x0A\x11RemoveMyLinkedIDP\x12).zitadel.auth.v1.RemoveMyLinkedIDPRequest\x1A*.zitadel.auth.v1.RemoveMyLinkedIDPResponse\"\xF7\x02\x92A\xB0\x02\x0A\x11User Social Login\x12\x13Remove Social Login\x1A\x85\x02Remove one of the linked social logins/identity providers of the authenticated user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02**(/users/me/idps/{idp_id}/{linked_user_id}\x12\xBF\x02\x0A\x11ListMyAuthFactors\x12).zitadel.auth.v1.ListMyAuthFactorsRequest\x1A*.zitadel.auth.v1.ListMyAuthFactorsResponse\"\xD2\x01\x92A\x95\x01\x0A\x1AUser Authentication Factor\x12\x1BList Authentication Factors\x1AZReturns a list of possible authentication factors, multi-factor (MFA), second factor (2FA)\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02 \"\x1E/users/me/auth_factors/_search\x12\xC8\x03\x0A\x12AddMyAuthFactorOTP\x12*.zitadel.auth.v1.AddMyAuthFactorOTPRequest\x1A+.zitadel.auth.v1.AddMyAuthFactorOTPResponse\"\xD8\x02\x92A\x9C\x02\x0A\x1AUser Authentication Factor\x12\x1BAdd One-Time Password (OTP)\x1A\xE0\x01Add a new One-Time Password (OTP) factor to the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. Only one OTP per user is allowed. After adding a new OTP it has to be verified.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1F\"\x1A/users/me/auth_factors/otp:\x01*\x12\xBA\x03\x0A\x15VerifyMyAuthFactorOTP\x12-.zitadel.auth.v1.VerifyMyAuthFactorOTPRequest\x1A..zitadel.auth.v1.VerifyMyAuthFactorOTPResponse\"\xC1\x02\x92A\xFD\x01\x0A\x1AUser Authentication Factor\x12\x1EVerify One-Time Password (OTP)\x1A\xBE\x01Verify the last added One-Time Password (OTP) factor of the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. Only one OTP per user is allowed.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02'\"\"/users/me/auth_factors/otp/_verify:\x01*\x12\xEB\x03\x0A\x15RemoveMyAuthFactorOTP\x12-.zitadel.auth.v1.RemoveMyAuthFactorOTPRequest\x1A..zitadel.auth.v1.RemoveMyAuthFactorOTPResponse\"\xF2\x02\x92A\xB9\x02\x0A\x1AUser Authentication Factor\x12\x1ERemove One-Time Password (OTP)\x1A\xFA\x01Remove the configured One-Time Password (OTP) factor of the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. As only one OTP per user is allowed, the user will not have OTP as a second factor afterward.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1C*\x1A/users/me/auth_factors/otp\x12\xD2\x03\x0A\x15AddMyAuthFactorOTPSMS\x12-.zitadel.auth.v1.AddMyAuthFactorOTPSMSRequest\x1A..zitadel.auth.v1.AddMyAuthFactorOTPSMSResponse\"\xD9\x02\x92A\x99\x02\x0A\x1AUser Authentication Factor\x12\x1FAdd One-Time Password (OTP) SMS\x1A\xD9\x01Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02#\"\x1E/users/me/auth_factors/otp_sms:\x01*\x12\xBB\x03\x0A\x18RemoveMyAuthFactorOTPSMS\x120.zitadel.auth.v1.RemoveMyAuthFactorOTPSMSRequest\x1A1.zitadel.auth.v1.RemoveMyAuthFactorOTPSMSResponse\"\xB9\x02\x92A\xFC\x01\x0A\x1AUser Authentication Factor\x12\"Remove One-Time Password (OTP) SMS\x1A\xB9\x01Remove the configured One-Time Password (OTP) SMS factor of the authenticated user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02 *\x1E/users/me/auth_factors/otp_sms\x12\xD2\x03\x0A\x17AddMyAuthFactorOTPEmail\x12/.zitadel.auth.v1.AddMyAuthFactorOTPEmailRequest\x1A0.zitadel.auth.v1.AddMyAuthFactorOTPEmailResponse\"\xD3\x02\x92A\x91\x02\x0A\x1AUser Authentication Factor\x12!Add One-Time Password (OTP) Email\x1A\xCF\x01Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02%\" /users/me/auth_factors/otp_email:\x01*\x12\xCB\x03\x0A\x1ARemoveMyAuthFactorOTPEmail\x122.zitadel.auth.v1.RemoveMyAuthFactorOTPEmailRequest\x1A3.zitadel.auth.v1.RemoveMyAuthFactorOTPEmailResponse\"\xC3\x02\x92A\x84\x02\x0A\x1AUser Authentication Factor\x12\$Remove One-Time Password (OTP) Email\x1A\xBF\x01Remove the configured One-Time Password (OTP) Email factor of the authenticated user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\"* /users/me/auth_factors/otp_email\x12\xCF\x03\x0A\x12AddMyAuthFactorU2F\x12*.zitadel.auth.v1.AddMyAuthFactorU2FRequest\x1A+.zitadel.auth.v1.AddMyAuthFactorU2FResponse\"\xDF\x02\x92A\xA3\x02\x0A\x1AUser Authentication Factor\x12!Add Universal Second Factor (U2F)\x1A\xE1\x01Add a new Universal Second Factor (U2F) to the authenticated user. U2F is a device-dependent authentication like FingerScan, FaceID, WindowHello, etc. The factor has to be verified after adding. Multiple factors can be added.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1F\"\x1A/users/me/auth_factors/u2f:\x01*\x12\xD0\x02\x0A\x15VerifyMyAuthFactorU2F\x12-.zitadel.auth.v1.VerifyMyAuthFactorU2FRequest\x1A..zitadel.auth.v1.VerifyMyAuthFactorU2FResponse\"\xD7\x01\x92A\x93\x01\x0A\x1AUser Authentication Factor\x12!Add Universal Second Factor (U2F)\x1ARVerify the last added new Universal Second Factor (U2F) to the authenticated user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02'\"\"/users/me/auth_factors/u2f/_verify:\x01*\x12\xDF\x02\x0A\x15RemoveMyAuthFactorU2F\x12-.zitadel.auth.v1.RemoveMyAuthFactorU2FRequest\x1A..zitadel.auth.v1.RemoveMyAuthFactorU2FResponse\"\xE6\x01\x92A\xA2\x01\x0A\x1AUser Authentication Factor\x12\$Remove Universal Second Factor (U2F)\x1A^Remove a specific Universal Second Factor (U2F) from the authenticated user by sending the id.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02'*%/users/me/auth_factors/u2f/{token_id}\x12\xCF\x02\x0A\x12ListMyPasswordless\x12*.zitadel.auth.v1.ListMyPasswordlessRequest\x1A+.zitadel.auth.v1.ListMyPasswordlessResponse\"\xDF\x01\x92A\xA2\x01\x0A\x1AUser Authentication Factor\x12\x0CList Passkey\x1AvGet the list of configured passkey authentication methods. Like FingerPrint, FaceID, WindowsHello, HardwareToken, etc.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02 \"\x1E/users/me/passwordless/_search\x12\xF4\x02\x0A\x11AddMyPasswordless\x12).zitadel.auth.v1.AddMyPasswordlessRequest\x1A*.zitadel.auth.v1.AddMyPasswordlessResponse\"\x87\x02\x92A\xCF\x01\x0A\x1AUser Authentication Factor\x12\x0BAdd passkey\x1A\xA3\x01Add a new passkey authentication method to the authenticated user. Like FingerPrint, FaceID, WindowsHello, HardwareToken, etc. Multiple passkeys can be configured.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1B\"\x16/users/me/passwordless:\x01*\x12\x91\x04\x0A\x15AddMyPasswordlessLink\x12-.zitadel.auth.v1.AddMyPasswordlessLinkRequest\x1A..zitadel.auth.v1.AddMyPasswordlessLinkResponse\"\x98\x03\x92A\xDA\x02\x0A\x1AUser Authentication Factor\x12\x10Add passkey link\x1A\xA9\x02Adds a new passkey authenticator link to the authenticated user and returns it in the response. This link enables the user to register a new device if current passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02!\"\x1C/users/me/passwordless/_link:\x01*\x12\xA8\x04\x0A\x16SendMyPasswordlessLink\x12..zitadel.auth.v1.SendMyPasswordlessLinkRequest\x1A/.zitadel.auth.v1.SendMyPasswordlessLinkResponse\"\xAC\x03\x92A\xE9\x02\x0A\x1AUser Authentication Factor\x12\x11Send passkey link\x1A\xB7\x02Adds a new passkey authenticator link to the authenticated user and sends it to the registered email address. This link enables the user to register a new device if current passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02&\"!/users/me/passwordless/_send_link:\x01*\x12\xAB\x02\x0A\x14VerifyMyPasswordless\x12,.zitadel.auth.v1.VerifyMyPasswordlessRequest\x1A-.zitadel.auth.v1.VerifyMyPasswordlessResponse\"\xB5\x01\x92Av\x0A\x1AUser Authentication Factor\x12\x0EVerify passkey\x1AHVerifies the last added passkey configuration of the authenticated user.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02#\"\x1E/users/me/passwordless/_verify:\x01*\x12\x9D\x03\x0A\x14RemoveMyPasswordless\x12,.zitadel.auth.v1.RemoveMyPasswordlessRequest\x1A-.zitadel.auth.v1.RemoveMyPasswordlessResponse\"\xA7\x02\x92A\xE7\x01\x0A\x1AUser Authentication Factor\x12\x0ERemove passkey\x1A\xB8\x01Remove a passkey configuration from the authenticated user. The user will not be able to log in with that configuration afterward. Make sure the user has other possibilities to log in.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02#*!/users/me/passwordless/{token_id}\x12\xED\x02\x0A\x10ListMyUserGrants\x12(.zitadel.auth.v1.ListMyUserGrantsRequest\x1A).zitadel.auth.v1.ListMyUserGrantsResponse\"\x83\x02\x92A\xCB\x01\x0A\x1AUser Authorizations/Grants\x12\x1DList My Authorizations/Grants\x1A\x8D\x01Returns a list of the authorizations/user grants the authenticated user has. User grants consist of an organization, a project and 1-n roles.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1B\"\x16/usergrants/me/_search:\x01*\x12\xDC\x03\x0A\x11ListMyProjectOrgs\x12).zitadel.auth.v1.ListMyProjectOrgsRequest\x1A*.zitadel.auth.v1.ListMyProjectOrgsResponse\"\xEF\x02\x92A\xB2\x02\x0A\x1AUser Authorizations/Grants\x12\x15List My Organizations\x1A\xFC\x01Returns a list of the organizations where the authenticated user has any authorizations/user grants. The request is made in the context of the requested project. This request can be used in multi-tenancy applications to show the user a tenant switcher.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02 \"\x1B/global/projectorgs/_search:\x01*\x12\x95\x03\x0A\x18ListMyZitadelPermissions\x120.zitadel.auth.v1.ListMyZitadelPermissionsRequest\x1A1.zitadel.auth.v1.ListMyZitadelPermissionsResponse\"\x93\x02\x92A\xD5\x01\x0A\x1AUser Authorizations/Grants\x12\x1BList My ZITADEL Permissions\x1A\x99\x01Returns a list of permissions the authenticated user has in ZITADEL based on the manager roles the user has. (e.g: ORG_OWNER = org.read, org.write, ...).\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02!\"\x1F/permissions/zitadel/me/_search\x12\xD4\x02\x0A\x18ListMyProjectPermissions\x120.zitadel.auth.v1.ListMyProjectPermissionsRequest\x1A1.zitadel.auth.v1.ListMyProjectPermissionsResponse\"\xD2\x01\x92A\x9C\x01\x0A\x1AUser Authorizations/Grants\x12\x15List My Project Roles\x1AgReturns a list of roles for the authenticated user and for the requesting project (based on the token).\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x19\"\x17/permissions/me/_search\x12\x9F\x02\x0A\x11ListMyMemberships\x12).zitadel.auth.v1.ListMyMembershipsRequest\x1A*.zitadel.auth.v1.ListMyMembershipsResponse\"\xB2\x01\x92Az\x0A\x10User Memberships\x12\x1DList My ZITADEL Manager Roles\x1AGShow all the management roles my user has in ZITADEL (ZITADEL Manager).\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x1C\"\x17/memberships/me/_search:\x01*\x12\xF6\x02\x0A\x10GetMyLabelPolicy\x12(.zitadel.auth.v1.GetMyLabelPolicyRequest\x1A).zitadel.auth.v1.GetMyLabelPolicyResponse\"\x8C\x02\x92A\xDE\x01\x0A\x08Policies\x12\x10Get Label Policy\x1A\xBF\x01Returns the label settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines the branding, colors, fonts, images, etc.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x11\x12\x0F/policies/label\x12\xFC\x02\x0A\x12GetMyPrivacyPolicy\x12*.zitadel.auth.v1.GetMyPrivacyPolicyRequest\x1A+.zitadel.auth.v1.GetMyPrivacyPolicyResponse\"\x8C\x02\x92A\xDC\x01\x0A\x08Policies\x12\x12Get Privacy Policy\x1A\xBB\x01Returns the privacy settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines the TOS and terms of service links.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x13\x12\x11/policies/privacy\x12\xBB\x03\x0A\x10GetMyLoginPolicy\x12(.zitadel.auth.v1.GetMyLoginPolicyRequest\x1A).zitadel.auth.v1.GetMyLoginPolicyResponse\"\xD1\x02\x92A\xA3\x02\x0A\x08Policies\x12\x10Get Login Policy\x1A\x84\x02Returns the login settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines what possibilities the user has to authenticate and to use in the login, e.g social logins, MFA, passkey, etc.\x82\xB5\x18\x0F\x0A\x0Dauthenticated\x82\xD3\xE4\x93\x02\x11\x12\x0F/policies/loginB\x94\x08Z(github.com/zitadel/zitadel/pkg/grpc/auth\x92A\xE6\x07\x12\xF6\x01\x0A\x1BAuthentication API aka Auth\x12VThe authentication API is used for all operations on the currently authenticated user.\".\x0A\x07ZITADEL\x12\x13https://zitadel.com\x1A\x0Ehi@zitadel.com*J\x0A\x12Apache License 2.0\x124https://github.com/zitadel/zitadel/blob/main/LICENSE2\x031.0\x1A\x0E\$CUSTOM-DOMAIN\"\x08/auth/v1*\x01\x022\x10application/json2\x10application/grpc2\x1Aapplication/grpc-web+proto:\x10application/json:\x10application/grpc:\x1Aapplication/grpc-web+protoZw\x0A\x0F\x0A\x09BasicAuth\x12\x02\x08\x01\x0Ad\x0A\x06OAuth2\x12Z\x08\x03(\x042!\$CUSTOM-DOMAIN/oauth/v2/authorize:\x1D\$CUSTOM-DOMAIN/oauth/v2/tokenB\x12\x0A\x10\x0A\x06openid\x12\x06openidb\x14\x0A\x12\x0A\x06OAuth2\x12\x08\x0A\x06openidj\x09\x0A\x07Generalj\xCE\x01\x0A\x08Policies\x12\xC1\x01Policies are settings that are made on either an instance or organization level of ZITADEL. The policies will have an impact on what a user is allowed to do or what should be shown to the user.j\x06\x0A\x04Userj\x1C\x0A\x1AUser Authentication Factorj\x1C\x0A\x1AUser Authorizations/Grantsj\x0C\x0A\x0AUser Emailj\x0F\x0A\x0DUser Metadataj\x0C\x0A\x0AUser Phonej\x0E\x0A\x0CUser Profilej\x13\x0A\x11User Social Loginj\x0D\x0A\x0BUser Tokensr>\x0A\"Detailed information about ZITADEL\x12\x18https://zitadel.com/docsb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

