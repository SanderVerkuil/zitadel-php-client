<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/feature/v2beta/system.proto

namespace GPBMetadata\Zitadel\Feature\V2Beta;

class System
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        
        \GPBMetadata\Validate\Validate::initOnce();
        \GPBMetadata\Zitadel\Object\V2Beta\Object_::initOnce();
        \GPBMetadata\Zitadel\Feature\V2Beta\Feature::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xBC,\x0A#zitadel/feature/v2beta/system.proto\x12\x16zitadel.feature.v2beta\x1A\x17validate/validate.proto\x1A\"zitadel/object/v2beta/object.proto\x1A\$zitadel/feature/v2beta/feature.proto\"\x84\x14\x0A\x18SetSystemFeaturesRequest\x12\xAF\x01\x0A\x11login_default_org\x18\x01 \x01(\x08B~\x92A{2sThe login UI will use the settings of the default org (and not from the instance) if no organization context is setJ\x04trueH\x00R\x0FloginDefaultOrg\x88\x01\x01\x12\xB7\x03\x0A&oidc_trigger_introspection_projections\x18\x02 \x01(\x08B\xDC\x02\x92A\xD8\x022\xCF\x02Enable projection triggers during an introspection request. This can act as workaround if there are noticeable consistency issues in the introspection response but can have an impact on performance. We are planning to remove triggers for introspection requests in the future. Please raise an issue if you needed to enable this feature.J\x04trueH\x01R#oidcTriggerIntrospectionProjections\x88\x01\x01\x12\xB6\x02\x0A\x19oidc_legacy_introspection\x18\x03 \x01(\x08B\xF4\x01\x92A\xF0\x012\xE7\x01We have recently refactored the introspection endpoint for performance reasons. This feature can be used to rollback to the legacy implementation if unexpected bugs arise. Please raise an issue if you needed to enable this feature.J\x04trueH\x02R\x17oidcLegacyIntrospection\x88\x01\x01\x12\xDB\x01\x0A\x0Buser_schema\x18\x04 \x01(\x08B\xB4\x01\x92A\xB0\x012\xA7\x01User Schemas allow to manage data schemas of user. If the flag is enabled, you'll be able to use the new API and its features. Note that it is still in an early stage.J\x04trueH\x03R\x0AuserSchema\x88\x01\x01\x12\xD0\x02\x0A\x13oidc_token_exchange\x18\x05 \x01(\x08B\x9A\x02\x92A\x96\x022\x8D\x02Enable the experimental `urn:ietf:params:oauth:grant-type:token-exchange` grant type for the OIDC token endpoint. Token exchange can be used to request tokens with a lesser scope or impersonate other users. See the security policy to allow impersonation on an instance.J\x04trueH\x04R\x11oidcTokenExchange\x88\x01\x01\x12\xD6\x01\x0A\x07actions\x18\x06 \x01(\x08B\xB6\x01\x92A\xB2\x012\xA9\x01Actions allow to manage data executions and targets. If the flag is enabled, you'll be able to use the new API and its features. Note that it is still in an early stage.J\x04trueH\x05R\x07actions\x88\x01\x01\x12\xAD\x01\x0A\x14improved_performance\x18\x07 \x03(\x0E2+.zitadel.feature.v2beta.ImprovedPerformanceBM\x92A922Improves performance of specified execution paths.J\x03[1]\xFAB\x0E\x92\x01\x0B\x18\x01\"\x07\x82\x01\x04\x10\x01 \x00R\x13improvedPerformance\x12\xCE\x03\x0A\"oidc_single_v1_session_termination\x18\x08 \x01(\x08B\xFC\x02\x92A\xF8\x022\xEF\x02If the flag is enabled, you'll be able to terminate a single session from the login UI by providing an id_token with a `sid` claim as id_token_hint on the end_session endpoint. Note that currently all sessions from the same user agent (browser) are terminated in the login UI. Sessions managed through the Session API already allow the termination of single sessions.J\x04trueH\x06R\x1EoidcSingleV1SessionTermination\x88\x01\x01B\x14\x0A\x12_login_default_orgB)\x0A'_oidc_trigger_introspection_projectionsB\x1C\x0A\x1A_oidc_legacy_introspectionB\x0E\x0A\x0C_user_schemaB\x16\x0A\x14_oidc_token_exchangeB\x0A\x0A\x08_actionsB%\x0A#_oidc_single_v1_session_termination\"U\x0A\x19SetSystemFeaturesResponse\x128\x0A\x07details\x18\x01 \x01(\x0B2\x1E.zitadel.object.v2beta.DetailsR\x07details\"\x1C\x0A\x1AResetSystemFeaturesRequest\"W\x0A\x1BResetSystemFeaturesResponse\x128\x0A\x07details\x18\x01 \x01(\x0B2\x1E.zitadel.object.v2beta.DetailsR\x07details\"\x1A\x0A\x18GetSystemFeaturesRequest\"\xE2\x14\x0A\x19GetSystemFeaturesResponse\x128\x0A\x07details\x18\x01 \x01(\x0B2\x1E.zitadel.object.v2beta.DetailsR\x07details\x12\xCF\x01\x0A\x11login_default_org\x18\x02 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB~\x92A{2sThe login UI will use the settings of the default org (and not from the instance) if no organization context is setJ\x04trueR\x0FloginDefaultOrg\x12\xD7\x03\x0A&oidc_trigger_introspection_projections\x18\x03 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\xDC\x02\x92A\xD8\x022\xCF\x02Enable projection triggers during an introspection request. This can act as workaround if there are noticeable consistency issues in the introspection response but can have an impact on performance. We are planning to remove triggers for introspection requests in the future. Please raise an issue if you needed to enable this feature.J\x04trueR#oidcTriggerIntrospectionProjections\x12\xD6\x02\x0A\x19oidc_legacy_introspection\x18\x04 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\xF4\x01\x92A\xF0\x012\xE7\x01We have recently refactored the introspection endpoint for performance reasons. This feature can be used to rollback to the legacy implementation if unexpected bugs arise. Please raise an issue if you needed to enable this feature.J\x04trueR\x17oidcLegacyIntrospection\x12\xFB\x01\x0A\x0Buser_schema\x18\x05 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\xB4\x01\x92A\xB0\x012\xA7\x01User Schemas allow to manage data schemas of user. If the flag is enabled, you'll be able to use the new API and its features. Note that it is still in an early stage.J\x04trueR\x0AuserSchema\x12\xF0\x02\x0A\x13oidc_token_exchange\x18\x06 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\x9A\x02\x92A\x96\x022\x8D\x02Enable the experimental `urn:ietf:params:oauth:grant-type:token-exchange` grant type for the OIDC token endpoint. Token exchange can be used to request tokens with a lesser scope or impersonate other users. See the security policy to allow impersonation on an instance.J\x04trueR\x11oidcTokenExchange\x12\xF9\x01\x0A\x07actions\x18\x07 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\xB9\x01\x92A\xB5\x012\xAC\x01Actions v2 allow to manage data executions and targets. If the flag is enabled, you'll be able to use the new API and its features. Note that it is still in an early stage.J\x04trueR\x07actions\x12\xA7\x01\x0A\x14improved_performance\x18\x08 \x01(\x0B26.zitadel.feature.v2beta.ImprovedPerformanceFeatureFlagB<\x92A922Improves performance of specified execution paths.J\x03[1]R\x13improvedPerformance\x12\xEE\x03\x0A\"oidc_single_v1_session_termination\x18\x09 \x01(\x0B2#.zitadel.feature.v2beta.FeatureFlagB\xFC\x02\x92A\xF8\x022\xEF\x02If the flag is enabled, you'll be able to terminate a single session from the login UI by providing an id_token with a `sid` claim as id_token_hint on the end_session endpoint. Note that currently all sessions from the same user agent (browser) are terminated in the login UI. Sessions managed through the Session API already allow the termination of single sessions.J\x04trueR\x1EoidcSingleV1SessionTerminationB<Z:github.com/zitadel/zitadel/pkg/grpc/feature/v2beta;featureb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

