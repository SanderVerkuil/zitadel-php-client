<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/system.proto

namespace Zitadel\System\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.system.v1.SetQuotaRequest</code>
 */
class SetQuotaRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string instance_id = 1 [json_name = "instanceId", (.validate.rules) = {</code>
     */
    protected $instance_id = '';
    /**
     * the unit a quota should be imposed on
     *
     * Generated from protobuf field <code>.zitadel.quota.v1.Unit unit = 2 [json_name = "unit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $unit = 0;
    /**
     * the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [json_name = "from", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $from = null;
    /**
     * the quota periods duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration reset_interval = 4 [json_name = "resetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $reset_interval = null;
    /**
     * the quota amount of units
     *
     * Generated from protobuf field <code>uint64 amount = 5 [json_name = "amount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $amount = 0;
    /**
     * whether ZITADEL should block further usage when the configured amount is used
     *
     * Generated from protobuf field <code>bool limit = 6 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $limit = false;
    /**
     * the handlers, ZITADEL executes when certain quota percentages are reached
     *
     * Generated from protobuf field <code>repeated .zitadel.quota.v1.Notification notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    private $notifications;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $instance_id
     *     @type int $unit
     *           the unit a quota should be imposed on
     *     @type \Google\Protobuf\Timestamp $from
     *           the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
     *     @type \Google\Protobuf\Duration $reset_interval
     *           the quota periods duration
     *     @type int|string $amount
     *           the quota amount of units
     *     @type bool $limit
     *           whether ZITADEL should block further usage when the configured amount is used
     *     @type array<\Zitadel\Quota\V1\Notification>|\Google\Protobuf\Internal\RepeatedField $notifications
     *           the handlers, ZITADEL executes when certain quota percentages are reached
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\System::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string instance_id = 1 [json_name = "instanceId", (.validate.rules) = {</code>
     * @return string
     */
    public function getInstanceId()
    {
        return $this->instance_id;
    }

    /**
     * Generated from protobuf field <code>string instance_id = 1 [json_name = "instanceId", (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setInstanceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance_id = $var;

        return $this;
    }

    /**
     * the unit a quota should be imposed on
     *
     * Generated from protobuf field <code>.zitadel.quota.v1.Unit unit = 2 [json_name = "unit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return int
     */
    public function getUnit()
    {
        return $this->unit;
    }

    /**
     * the unit a quota should be imposed on
     *
     * Generated from protobuf field <code>.zitadel.quota.v1.Unit unit = 2 [json_name = "unit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param int $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Quota\V1\Unit::class);
        $this->unit = $var;

        return $this;
    }

    /**
     * the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [json_name = "from", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFrom()
    {
        return $this->from;
    }

    public function hasFrom()
    {
        return isset($this->from);
    }

    public function clearFrom()
    {
        unset($this->from);
    }

    /**
     * the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [json_name = "from", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->from = $var;

        return $this;
    }

    /**
     * the quota periods duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration reset_interval = 4 [json_name = "resetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getResetInterval()
    {
        return $this->reset_interval;
    }

    public function hasResetInterval()
    {
        return isset($this->reset_interval);
    }

    public function clearResetInterval()
    {
        unset($this->reset_interval);
    }

    /**
     * the quota periods duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration reset_interval = 4 [json_name = "resetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setResetInterval($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->reset_interval = $var;

        return $this;
    }

    /**
     * the quota amount of units
     *
     * Generated from protobuf field <code>uint64 amount = 5 [json_name = "amount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return int|string
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * the quota amount of units
     *
     * Generated from protobuf field <code>uint64 amount = 5 [json_name = "amount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkUint64($var);
        $this->amount = $var;

        return $this;
    }

    /**
     * whether ZITADEL should block further usage when the configured amount is used
     *
     * Generated from protobuf field <code>bool limit = 6 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return bool
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * whether ZITADEL should block further usage when the configured amount is used
     *
     * Generated from protobuf field <code>bool limit = 6 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param bool $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkBool($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * the handlers, ZITADEL executes when certain quota percentages are reached
     *
     * Generated from protobuf field <code>repeated .zitadel.quota.v1.Notification notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNotifications()
    {
        return $this->notifications;
    }

    /**
     * the handlers, ZITADEL executes when certain quota percentages are reached
     *
     * Generated from protobuf field <code>repeated .zitadel.quota.v1.Notification notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param array<\Zitadel\Quota\V1\Notification>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNotifications($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Zitadel\Quota\V1\Notification::class);
        $this->notifications = $arr;

        return $this;
    }

}

