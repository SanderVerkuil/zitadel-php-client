<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/object.proto

namespace Zitadel\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>zitadel.v1.TextQueryMethod</code>
 */
class TextQueryMethod
{
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_EQUALS = 0;</code>
     */
    const TEXT_QUERY_METHOD_EQUALS = 0;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE = 1;</code>
     */
    const TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE = 1;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_STARTS_WITH = 2;</code>
     */
    const TEXT_QUERY_METHOD_STARTS_WITH = 2;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE = 3;</code>
     */
    const TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE = 3;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_CONTAINS = 4;</code>
     */
    const TEXT_QUERY_METHOD_CONTAINS = 4;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE = 5;</code>
     */
    const TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE = 5;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_ENDS_WITH = 6;</code>
     */
    const TEXT_QUERY_METHOD_ENDS_WITH = 6;
    /**
     * Generated from protobuf enum <code>TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE = 7;</code>
     */
    const TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE = 7;

    private static $valueToName = [
        self::TEXT_QUERY_METHOD_EQUALS => 'TEXT_QUERY_METHOD_EQUALS',
        self::TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE => 'TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE',
        self::TEXT_QUERY_METHOD_STARTS_WITH => 'TEXT_QUERY_METHOD_STARTS_WITH',
        self::TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE => 'TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE',
        self::TEXT_QUERY_METHOD_CONTAINS => 'TEXT_QUERY_METHOD_CONTAINS',
        self::TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE => 'TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE',
        self::TEXT_QUERY_METHOD_ENDS_WITH => 'TEXT_QUERY_METHOD_ENDS_WITH',
        self::TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE => 'TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

