<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/resources/webkey/v3alpha/config.proto

namespace Zitadel\Resources\Webkey\V3alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.resources.webkey.v3alpha.WebKeyRSAConfig</code>
 */
class WebKeyRSAConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * bit size of the RSA key
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSABits bits = 1 [json_name = "bits", (.validate.rules) = {</code>
     */
    protected $bits = 0;
    /**
     * signing algrithm used
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSAHasher hasher = 2 [json_name = "hasher", (.validate.rules) = {</code>
     */
    protected $hasher = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $bits
     *           bit size of the RSA key
     *     @type int $hasher
     *           signing algrithm used
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Resources\Webkey\V3Alpha\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * bit size of the RSA key
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSABits bits = 1 [json_name = "bits", (.validate.rules) = {</code>
     * @return int
     */
    public function getBits()
    {
        return $this->bits;
    }

    /**
     * bit size of the RSA key
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSABits bits = 1 [json_name = "bits", (.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setBits($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Resources\Webkey\V3alpha\WebKeyRSAConfig\RSABits::class);
        $this->bits = $var;

        return $this;
    }

    /**
     * signing algrithm used
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSAHasher hasher = 2 [json_name = "hasher", (.validate.rules) = {</code>
     * @return int
     */
    public function getHasher()
    {
        return $this->hasher;
    }

    /**
     * signing algrithm used
     *
     * Generated from protobuf field <code>.zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSAHasher hasher = 2 [json_name = "hasher", (.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setHasher($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Resources\Webkey\V3alpha\WebKeyRSAConfig\RSAHasher::class);
        $this->hasher = $var;

        return $this;
    }

}

