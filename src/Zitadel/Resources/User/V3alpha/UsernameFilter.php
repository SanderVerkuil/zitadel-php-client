<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/resources/user/v3alpha/query.proto

namespace Zitadel\Resources\User\V3alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.resources.user.v3alpha.UsernameFilter</code>
 */
class UsernameFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Defines the username to query for.
     *
     * Generated from protobuf field <code>string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $username = '';
    /**
     * Defines which text comparison method used for the username query.
     *
     * Generated from protobuf field <code>.zitadel.resources.object.v3alpha.TextFilterMethod method = 2 [json_name = "method", (.validate.rules) = {</code>
     */
    protected $method = 0;
    /**
     * Defines that the username must only be unique in the organisation.
     *
     * Generated from protobuf field <code>bool is_organization_specific = 3 [json_name = "isOrganizationSpecific"];</code>
     */
    protected $is_organization_specific = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $username
     *           Defines the username to query for.
     *     @type int $method
     *           Defines which text comparison method used for the username query.
     *     @type bool $is_organization_specific
     *           Defines that the username must only be unique in the organisation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Resources\User\V3Alpha\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Defines the username to query for.
     *
     * Generated from protobuf field <code>string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Defines the username to query for.
     *
     * Generated from protobuf field <code>string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    /**
     * Defines which text comparison method used for the username query.
     *
     * Generated from protobuf field <code>.zitadel.resources.object.v3alpha.TextFilterMethod method = 2 [json_name = "method", (.validate.rules) = {</code>
     * @return int
     */
    public function getMethod()
    {
        return $this->method;
    }

    /**
     * Defines which text comparison method used for the username query.
     *
     * Generated from protobuf field <code>.zitadel.resources.object.v3alpha.TextFilterMethod method = 2 [json_name = "method", (.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setMethod($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Resources\Object\V3alpha\TextFilterMethod::class);
        $this->method = $var;

        return $this;
    }

    /**
     * Defines that the username must only be unique in the organisation.
     *
     * Generated from protobuf field <code>bool is_organization_specific = 3 [json_name = "isOrganizationSpecific"];</code>
     * @return bool
     */
    public function getIsOrganizationSpecific()
    {
        return $this->is_organization_specific;
    }

    /**
     * Defines that the username must only be unique in the organisation.
     *
     * Generated from protobuf field <code>bool is_organization_specific = 3 [json_name = "isOrganizationSpecific"];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsOrganizationSpecific($var)
    {
        GPBUtil::checkBool($var);
        $this->is_organization_specific = $var;

        return $this;
    }

}

