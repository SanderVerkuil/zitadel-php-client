<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/idp/v2/idp.proto

namespace Zitadel\Idp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.idp.v2.SAMLConfig</code>
 */
class SAMLConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Metadata of the SAML identity provider.
     *
     * Generated from protobuf field <code>bytes metadata_xml = 1 [json_name = "metadataXml"];</code>
     */
    protected $metadata_xml = '';
    /**
     * Binding which defines the type of communication with the identity provider.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLBinding binding = 2 [json_name = "binding"];</code>
     */
    protected $binding = 0;
    /**
     * Boolean which defines if the authentication requests are signed.
     *
     * Generated from protobuf field <code>bool with_signed_request = 3 [json_name = "withSignedRequest"];</code>
     */
    protected $with_signed_request = false;
    /**
     * `nameid-format` for the SAML Request.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLNameIDFormat name_id_format = 4 [json_name = "nameIdFormat"];</code>
     */
    protected $name_id_format = 0;
    /**
     * Optional name of the attribute, which will be used to map the user
     * in case the nameid-format returned is
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
     *
     * Generated from protobuf field <code>optional string transient_mapping_attribute_name = 5 [json_name = "transientMappingAttributeName"];</code>
     */
    protected $transient_mapping_attribute_name = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $metadata_xml
     *           Metadata of the SAML identity provider.
     *     @type int $binding
     *           Binding which defines the type of communication with the identity provider.
     *     @type bool $with_signed_request
     *           Boolean which defines if the authentication requests are signed.
     *     @type int $name_id_format
     *           `nameid-format` for the SAML Request.
     *     @type string $transient_mapping_attribute_name
     *           Optional name of the attribute, which will be used to map the user
     *           in case the nameid-format returned is
     *           `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Idp\V2\Idp::initOnce();
        parent::__construct($data);
    }

    /**
     * Metadata of the SAML identity provider.
     *
     * Generated from protobuf field <code>bytes metadata_xml = 1 [json_name = "metadataXml"];</code>
     * @return string
     */
    public function getMetadataXml()
    {
        return $this->metadata_xml;
    }

    /**
     * Metadata of the SAML identity provider.
     *
     * Generated from protobuf field <code>bytes metadata_xml = 1 [json_name = "metadataXml"];</code>
     * @param string $var
     * @return $this
     */
    public function setMetadataXml($var)
    {
        GPBUtil::checkString($var, False);
        $this->metadata_xml = $var;

        return $this;
    }

    /**
     * Binding which defines the type of communication with the identity provider.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLBinding binding = 2 [json_name = "binding"];</code>
     * @return int
     */
    public function getBinding()
    {
        return $this->binding;
    }

    /**
     * Binding which defines the type of communication with the identity provider.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLBinding binding = 2 [json_name = "binding"];</code>
     * @param int $var
     * @return $this
     */
    public function setBinding($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Idp\V2\SAMLBinding::class);
        $this->binding = $var;

        return $this;
    }

    /**
     * Boolean which defines if the authentication requests are signed.
     *
     * Generated from protobuf field <code>bool with_signed_request = 3 [json_name = "withSignedRequest"];</code>
     * @return bool
     */
    public function getWithSignedRequest()
    {
        return $this->with_signed_request;
    }

    /**
     * Boolean which defines if the authentication requests are signed.
     *
     * Generated from protobuf field <code>bool with_signed_request = 3 [json_name = "withSignedRequest"];</code>
     * @param bool $var
     * @return $this
     */
    public function setWithSignedRequest($var)
    {
        GPBUtil::checkBool($var);
        $this->with_signed_request = $var;

        return $this;
    }

    /**
     * `nameid-format` for the SAML Request.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLNameIDFormat name_id_format = 4 [json_name = "nameIdFormat"];</code>
     * @return int
     */
    public function getNameIdFormat()
    {
        return $this->name_id_format;
    }

    /**
     * `nameid-format` for the SAML Request.
     *
     * Generated from protobuf field <code>.zitadel.idp.v2.SAMLNameIDFormat name_id_format = 4 [json_name = "nameIdFormat"];</code>
     * @param int $var
     * @return $this
     */
    public function setNameIdFormat($var)
    {
        GPBUtil::checkEnum($var, \Zitadel\Idp\V2\SAMLNameIDFormat::class);
        $this->name_id_format = $var;

        return $this;
    }

    /**
     * Optional name of the attribute, which will be used to map the user
     * in case the nameid-format returned is
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
     *
     * Generated from protobuf field <code>optional string transient_mapping_attribute_name = 5 [json_name = "transientMappingAttributeName"];</code>
     * @return string
     */
    public function getTransientMappingAttributeName()
    {
        return isset($this->transient_mapping_attribute_name) ? $this->transient_mapping_attribute_name : '';
    }

    public function hasTransientMappingAttributeName()
    {
        return isset($this->transient_mapping_attribute_name);
    }

    public function clearTransientMappingAttributeName()
    {
        unset($this->transient_mapping_attribute_name);
    }

    /**
     * Optional name of the attribute, which will be used to map the user
     * in case the nameid-format returned is
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
     *
     * Generated from protobuf field <code>optional string transient_mapping_attribute_name = 5 [json_name = "transientMappingAttributeName"];</code>
     * @param string $var
     * @return $this
     */
    public function setTransientMappingAttributeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->transient_mapping_attribute_name = $var;

        return $this;
    }

}

