<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/object/v3alpha/object.proto

namespace Zitadel\Object\V3alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.object.v3alpha.Instance</code>
 */
class Instance extends \Google\Protobuf\Internal\Message
{
    protected $property;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $domain
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Object\V3Alpha\Object_::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->readOneof(1);
    }

    public function hasId()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string domain = 2 [json_name = "domain"];</code>
     * @return string
     */
    public function getDomain()
    {
        return $this->readOneof(2);
    }

    public function hasDomain()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>string domain = 2 [json_name = "domain"];</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getProperty()
    {
        return $this->whichOneof("property");
    }

}

