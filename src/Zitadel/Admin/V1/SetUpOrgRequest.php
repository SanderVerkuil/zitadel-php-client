<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/admin.proto

namespace Zitadel\Admin\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.admin.v1.SetUpOrgRequest</code>
 */
class SetUpOrgRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.zitadel.admin.v1.SetUpOrgRequest.Org org = 1 [json_name = "org", (.validate.rules) = {</code>
     */
    protected $org = null;
    /**
     * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
     *
     * Generated from protobuf field <code>repeated string roles = 3 [json_name = "roles"];</code>
     */
    private $roles;
    protected $user;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Zitadel\Admin\V1\SetUpOrgRequest\Org $org
     *     @type \Zitadel\Admin\V1\SetUpOrgRequest\Human $human
     *           oneof field for the user managing the organization
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $roles
     *           specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Admin::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.zitadel.admin.v1.SetUpOrgRequest.Org org = 1 [json_name = "org", (.validate.rules) = {</code>
     * @return \Zitadel\Admin\V1\SetUpOrgRequest\Org|null
     */
    public function getOrg()
    {
        return $this->org;
    }

    public function hasOrg()
    {
        return isset($this->org);
    }

    public function clearOrg()
    {
        unset($this->org);
    }

    /**
     * Generated from protobuf field <code>.zitadel.admin.v1.SetUpOrgRequest.Org org = 1 [json_name = "org", (.validate.rules) = {</code>
     * @param \Zitadel\Admin\V1\SetUpOrgRequest\Org $var
     * @return $this
     */
    public function setOrg($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Admin\V1\SetUpOrgRequest\Org::class);
        $this->org = $var;

        return $this;
    }

    /**
     * oneof field for the user managing the organization
     *
     * Generated from protobuf field <code>.zitadel.admin.v1.SetUpOrgRequest.Human human = 2 [json_name = "human"];</code>
     * @return \Zitadel\Admin\V1\SetUpOrgRequest\Human|null
     */
    public function getHuman()
    {
        return $this->readOneof(2);
    }

    public function hasHuman()
    {
        return $this->hasOneof(2);
    }

    /**
     * oneof field for the user managing the organization
     *
     * Generated from protobuf field <code>.zitadel.admin.v1.SetUpOrgRequest.Human human = 2 [json_name = "human"];</code>
     * @param \Zitadel\Admin\V1\SetUpOrgRequest\Human $var
     * @return $this
     */
    public function setHuman($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Admin\V1\SetUpOrgRequest\Human::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
     *
     * Generated from protobuf field <code>repeated string roles = 3 [json_name = "roles"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRoles()
    {
        return $this->roles;
    }

    /**
     * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
     *
     * Generated from protobuf field <code>repeated string roles = 3 [json_name = "roles"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRoles($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->roles = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getUser()
    {
        return $this->whichOneof("user");
    }

}

