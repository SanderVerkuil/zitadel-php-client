<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/oidc/v2beta/authorization.proto

namespace Zitadel\Oidc\V2beta;

use UnexpectedValueException;

/**
 * Protobuf type <code>zitadel.oidc.v2beta.ErrorReason</code>
 */
class ErrorReason
{
    /**
     * Generated from protobuf enum <code>ERROR_REASON_UNSPECIFIED = 0;</code>
     */
    const ERROR_REASON_UNSPECIFIED = 0;
    /**
     * Error states from https://datatracker.ietf.org/doc/html/rfc6749#section-4.2.2.1
     *
     * Generated from protobuf enum <code>ERROR_REASON_INVALID_REQUEST = 1;</code>
     */
    const ERROR_REASON_INVALID_REQUEST = 1;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_UNAUTHORIZED_CLIENT = 2;</code>
     */
    const ERROR_REASON_UNAUTHORIZED_CLIENT = 2;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_ACCESS_DENIED = 3;</code>
     */
    const ERROR_REASON_ACCESS_DENIED = 3;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE = 4;</code>
     */
    const ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE = 4;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_INVALID_SCOPE = 5;</code>
     */
    const ERROR_REASON_INVALID_SCOPE = 5;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_SERVER_ERROR = 6;</code>
     */
    const ERROR_REASON_SERVER_ERROR = 6;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_TEMPORARY_UNAVAILABLE = 7;</code>
     */
    const ERROR_REASON_TEMPORARY_UNAVAILABLE = 7;
    /**
     * Error states from https://openid.net/specs/openid-connect-core-1_0.html#AuthError
     *
     * Generated from protobuf enum <code>ERROR_REASON_INTERACTION_REQUIRED = 8;</code>
     */
    const ERROR_REASON_INTERACTION_REQUIRED = 8;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_LOGIN_REQUIRED = 9;</code>
     */
    const ERROR_REASON_LOGIN_REQUIRED = 9;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_ACCOUNT_SELECTION_REQUIRED = 10;</code>
     */
    const ERROR_REASON_ACCOUNT_SELECTION_REQUIRED = 10;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_CONSENT_REQUIRED = 11;</code>
     */
    const ERROR_REASON_CONSENT_REQUIRED = 11;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_INVALID_REQUEST_URI = 12;</code>
     */
    const ERROR_REASON_INVALID_REQUEST_URI = 12;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_INVALID_REQUEST_OBJECT = 13;</code>
     */
    const ERROR_REASON_INVALID_REQUEST_OBJECT = 13;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_REQUEST_NOT_SUPPORTED = 14;</code>
     */
    const ERROR_REASON_REQUEST_NOT_SUPPORTED = 14;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_REQUEST_URI_NOT_SUPPORTED = 15;</code>
     */
    const ERROR_REASON_REQUEST_URI_NOT_SUPPORTED = 15;
    /**
     * Generated from protobuf enum <code>ERROR_REASON_REGISTRATION_NOT_SUPPORTED = 16;</code>
     */
    const ERROR_REASON_REGISTRATION_NOT_SUPPORTED = 16;

    private static $valueToName = [
        self::ERROR_REASON_UNSPECIFIED => 'ERROR_REASON_UNSPECIFIED',
        self::ERROR_REASON_INVALID_REQUEST => 'ERROR_REASON_INVALID_REQUEST',
        self::ERROR_REASON_UNAUTHORIZED_CLIENT => 'ERROR_REASON_UNAUTHORIZED_CLIENT',
        self::ERROR_REASON_ACCESS_DENIED => 'ERROR_REASON_ACCESS_DENIED',
        self::ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE => 'ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE',
        self::ERROR_REASON_INVALID_SCOPE => 'ERROR_REASON_INVALID_SCOPE',
        self::ERROR_REASON_SERVER_ERROR => 'ERROR_REASON_SERVER_ERROR',
        self::ERROR_REASON_TEMPORARY_UNAVAILABLE => 'ERROR_REASON_TEMPORARY_UNAVAILABLE',
        self::ERROR_REASON_INTERACTION_REQUIRED => 'ERROR_REASON_INTERACTION_REQUIRED',
        self::ERROR_REASON_LOGIN_REQUIRED => 'ERROR_REASON_LOGIN_REQUIRED',
        self::ERROR_REASON_ACCOUNT_SELECTION_REQUIRED => 'ERROR_REASON_ACCOUNT_SELECTION_REQUIRED',
        self::ERROR_REASON_CONSENT_REQUIRED => 'ERROR_REASON_CONSENT_REQUIRED',
        self::ERROR_REASON_INVALID_REQUEST_URI => 'ERROR_REASON_INVALID_REQUEST_URI',
        self::ERROR_REASON_INVALID_REQUEST_OBJECT => 'ERROR_REASON_INVALID_REQUEST_OBJECT',
        self::ERROR_REASON_REQUEST_NOT_SUPPORTED => 'ERROR_REASON_REQUEST_NOT_SUPPORTED',
        self::ERROR_REASON_REQUEST_URI_NOT_SUPPORTED => 'ERROR_REASON_REQUEST_URI_NOT_SUPPORTED',
        self::ERROR_REASON_REGISTRATION_NOT_SUPPORTED => 'ERROR_REASON_REGISTRATION_NOT_SUPPORTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

