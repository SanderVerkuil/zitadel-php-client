<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/oidc/v2/oidc_service.proto

namespace Zitadel\Oidc\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.oidc.v2.AuthorizeOrDenyDeviceAuthorizationRequest</code>
 */
class AuthorizeOrDenyDeviceAuthorizationRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The device authorization id returned when submitting the user code.
     *
     * Generated from protobuf field <code>string device_authorization_id = 1 [json_name = "deviceAuthorizationId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $device_authorization_id = '';
    protected $decision;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $device_authorization_id
     *           The device authorization id returned when submitting the user code.
     *     @type \Zitadel\Oidc\V2\Session $session
     *           To authorize the device authorization request, the user's session must be provided.
     *     @type \Zitadel\Oidc\V2\Deny $deny
     *           Deny the device authorization request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Oidc\V2\OidcService::initOnce();
        parent::__construct($data);
    }

    /**
     * The device authorization id returned when submitting the user code.
     *
     * Generated from protobuf field <code>string device_authorization_id = 1 [json_name = "deviceAuthorizationId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getDeviceAuthorizationId()
    {
        return $this->device_authorization_id;
    }

    /**
     * The device authorization id returned when submitting the user code.
     *
     * Generated from protobuf field <code>string device_authorization_id = 1 [json_name = "deviceAuthorizationId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceAuthorizationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->device_authorization_id = $var;

        return $this;
    }

    /**
     * To authorize the device authorization request, the user's session must be provided.
     *
     * Generated from protobuf field <code>.zitadel.oidc.v2.Session session = 2 [json_name = "session"];</code>
     * @return \Zitadel\Oidc\V2\Session|null
     */
    public function getSession()
    {
        return $this->readOneof(2);
    }

    public function hasSession()
    {
        return $this->hasOneof(2);
    }

    /**
     * To authorize the device authorization request, the user's session must be provided.
     *
     * Generated from protobuf field <code>.zitadel.oidc.v2.Session session = 2 [json_name = "session"];</code>
     * @param \Zitadel\Oidc\V2\Session $var
     * @return $this
     */
    public function setSession($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Oidc\V2\Session::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Deny the device authorization request.
     *
     * Generated from protobuf field <code>.zitadel.oidc.v2.Deny deny = 3 [json_name = "deny"];</code>
     * @return \Zitadel\Oidc\V2\Deny|null
     */
    public function getDeny()
    {
        return $this->readOneof(3);
    }

    public function hasDeny()
    {
        return $this->hasOneof(3);
    }

    /**
     * Deny the device authorization request.
     *
     * Generated from protobuf field <code>.zitadel.oidc.v2.Deny deny = 3 [json_name = "deny"];</code>
     * @param \Zitadel\Oidc\V2\Deny $var
     * @return $this
     */
    public function setDeny($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Oidc\V2\Deny::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDecision()
    {
        return $this->whichOneof("decision");
    }

}

