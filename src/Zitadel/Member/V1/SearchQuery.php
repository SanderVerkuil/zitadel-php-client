<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zitadel/member.proto

namespace Zitadel\Member\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>zitadel.member.v1.SearchQuery</code>
 */
class SearchQuery extends \Google\Protobuf\Internal\Message
{
    protected $query;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Zitadel\Member\V1\FirstNameQuery $first_name_query
     *     @type \Zitadel\Member\V1\LastNameQuery $last_name_query
     *     @type \Zitadel\Member\V1\EmailQuery $email_query
     *     @type \Zitadel\Member\V1\UserIDQuery $user_id_query
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Zitadel\Member::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.FirstNameQuery first_name_query = 1 [json_name = "firstNameQuery"];</code>
     * @return \Zitadel\Member\V1\FirstNameQuery|null
     */
    public function getFirstNameQuery()
    {
        return $this->readOneof(1);
    }

    public function hasFirstNameQuery()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.FirstNameQuery first_name_query = 1 [json_name = "firstNameQuery"];</code>
     * @param \Zitadel\Member\V1\FirstNameQuery $var
     * @return $this
     */
    public function setFirstNameQuery($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Member\V1\FirstNameQuery::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.LastNameQuery last_name_query = 2 [json_name = "lastNameQuery"];</code>
     * @return \Zitadel\Member\V1\LastNameQuery|null
     */
    public function getLastNameQuery()
    {
        return $this->readOneof(2);
    }

    public function hasLastNameQuery()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.LastNameQuery last_name_query = 2 [json_name = "lastNameQuery"];</code>
     * @param \Zitadel\Member\V1\LastNameQuery $var
     * @return $this
     */
    public function setLastNameQuery($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Member\V1\LastNameQuery::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.EmailQuery email_query = 3 [json_name = "emailQuery"];</code>
     * @return \Zitadel\Member\V1\EmailQuery|null
     */
    public function getEmailQuery()
    {
        return $this->readOneof(3);
    }

    public function hasEmailQuery()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.EmailQuery email_query = 3 [json_name = "emailQuery"];</code>
     * @param \Zitadel\Member\V1\EmailQuery $var
     * @return $this
     */
    public function setEmailQuery($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Member\V1\EmailQuery::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.UserIDQuery user_id_query = 4 [json_name = "userIdQuery"];</code>
     * @return \Zitadel\Member\V1\UserIDQuery|null
     */
    public function getUserIdQuery()
    {
        return $this->readOneof(4);
    }

    public function hasUserIdQuery()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.zitadel.member.v1.UserIDQuery user_id_query = 4 [json_name = "userIdQuery"];</code>
     * @param \Zitadel\Member\V1\UserIDQuery $var
     * @return $this
     */
    public function setUserIdQuery($var)
    {
        GPBUtil::checkMessage($var, \Zitadel\Member\V1\UserIDQuery::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getQuery()
    {
        return $this->whichOneof("query");
    }

}

